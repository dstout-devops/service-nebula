# Generated by Terragrunt. Sig: nIlQXj57tbuaRZEa
terraform {
  required_providers {
    docker = {
      source  = "kreuzwerker/docker"
      version = "~> 3.0"
    }
    helm = {
      source  = "hashicorp/helm"
      version = "~> 3.0"
    }
    kind = {
      source  = "tehcyx/kind"
      version = "~> 0.9"
    }
    kubectl = {
      source  = "gavinbunney/kubectl"
      version = "~> 1.19"
    }
    kubernetes = {
      source  = "hashicorp/kubernetes"
      version = "~> 2.0"
    }
    local = {
      source  = "hashicorp/local"
      version = "~> 2.0"
    }
    null = {
      source  = "hashicorp/null"
      version = "~> 3.0"
    }
    tls = {
      source  = "hashicorp/tls"
      version = "~> 4.0"
    }
    vault = {
      source  = "hashicorp/vault"
      version = "~> 5.0"
    }
  }
}

provider "docker" {
  host = "unix:///var/run/docker.sock"
}

provider "helm" {
  alias = "mgmt"
  # Helm 3.x provider configuration
  burst_limit = 300

  kubernetes = {
    config_path    = var.global_config.kubeconfig_path
    config_context = "kind-mgmt"
  }
}

provider "kind" {}

provider "kubectl" {
  alias            = "mgmt"
  config_path      = var.global_config.kubeconfig_path
  config_context   = "kind-mgmt"
  load_config_file = true
}

provider "kubernetes" {
  alias          = "mgmt"
  config_path    = var.global_config.kubeconfig_path
  config_context = "kind-mgmt"
}

provider "local" {}
provider "null" {}
provider "tls" {}

provider "vault" {
  address         = "https://localhost:8200"
  skip_tls_verify = true

  # Use Kubernetes auth if token file exists, otherwise use token file
  dynamic "auth_login" {
    for_each = fileexists("${path.module}/.vault-k8s-token") ? [1] : []
    content {
      path = "auth/kubernetes/login"

      parameters = {
        role = "terraform"
        jwt  = trimspace(file("${path.module}/.vault-k8s-token"))
      }
    }
  }

  # Fallback to token file for Stage 2b (bootstrap)
  token = fileexists("${path.module}/.vault-k8s-token") ? null : try(file("${path.module}/.vault-token"), null)
}
